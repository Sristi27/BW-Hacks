{"ast":null,"code":"var _jsxFileName = \"/Users/sristichowdhury/Desktop/bwHacks/client/src/components/camera-feed.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState } from 'react';\nimport './cameraStyles.css';\nimport Webcam from \"react-webcam\";\nimport fs from 'fs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst WebcamComponent = () => /*#__PURE__*/_jsxDEV(Webcam, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 6,\n  columnNumber: 31\n}, this);\n\n_c = WebcamComponent;\nconst videoConstraints = {\n  width: 260,\n  height: 260,\n  facingMode: \"user\"\n};\nexport const WebcamCapture = () => {\n  _s();\n\n  const webcamRef = React.useRef(null);\n  const [image, setImage] = useState('');\n  const capture = React.useCallback(() => {\n    const imageSrc = webcamRef.current.getScreenshot(); // console.log(imageSrc)\n\n    setImage(imageSrc);\n    var url = imageSrc;\n    fetch(url).then(res => res.blob()).then(blob => {\n      var fd = new FormData();\n      fd.append('image', blob, 'filename');\n      const link = document.createElement('a');\n      link.downlod = \"image/jpg\";\n      a.href = imageSrc;\n      a.click(); // fetch('https://speakupgenderapi.herokuapp.com/predict_api',\n      // {\n      //     mode:'no-cors',\n      //     method:'POST',\n      //     body:fd\n      // }).then(res=>console.log(res)).catch(err=>console.log(err))\n    });\n  });\n  const [photo, setPhoto] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Webcam, {\n      audio: false,\n      height: 260,\n      ref: webcamRef,\n      screenshotFormat: \"image/jpeg\",\n      width: 260,\n      videoConstraints: videoConstraints,\n      download: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: capture,\n      children: \"Capture photo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), image != '' ? /*#__PURE__*/_jsxDEV(\"img\", {\n      src: image\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 24\n    }, this) : '']\n  }, void 0, true);\n};\n\n_s(WebcamCapture, \"4uGf6N6/U5bHTwWMh5pSTyFZUX8=\");\n\n_c2 = WebcamCapture;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"WebcamComponent\");\n$RefreshReg$(_c2, \"WebcamCapture\");","map":{"version":3,"sources":["/Users/sristichowdhury/Desktop/bwHacks/client/src/components/camera-feed.jsx"],"names":["React","Component","useState","Webcam","fs","WebcamComponent","videoConstraints","width","height","facingMode","WebcamCapture","webcamRef","useRef","image","setImage","capture","useCallback","imageSrc","current","getScreenshot","url","fetch","then","res","blob","fd","FormData","append","link","document","createElement","downlod","a","href","click","photo","setPhoto"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,oBAAP;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,EAAP,MAAe,IAAf;;;;AAEA,MAAMC,eAAe,GAAG,mBAAM,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,QAA9B;;KAAMA,e;AAIN,MAAMC,gBAAgB,GAAG;AACrBC,EAAAA,KAAK,EAAE,GADc;AAErBC,EAAAA,MAAM,EAAE,GAFa;AAGrBC,EAAAA,UAAU,EAAE;AAHS,CAAzB;AAME,OAAO,MAAMC,aAAa,GAAG,MAAM;AAAA;;AACjC,QAAMC,SAAS,GAAGX,KAAK,CAACY,MAAN,CAAa,IAAb,CAAlB;AACA,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAiBZ,QAAQ,CAAC,EAAD,CAA/B;AAEA,QAAMa,OAAO,GAAGf,KAAK,CAACgB,WAAN,CACd,MAAM;AACJ,UAAMC,QAAQ,GAAGN,SAAS,CAACO,OAAV,CAAkBC,aAAlB,EAAjB,CADI,CAEJ;;AACAL,IAAAA,QAAQ,CAACG,QAAD,CAAR;AAGJ,QAAIG,GAAG,GAAEH,QAAT;AAEAI,IAAAA,KAAK,CAACD,GAAD,CAAL,CACCE,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEME,IAAI,IAAI;AACZ,UAAIC,EAAE,GAAG,IAAIC,QAAJ,EAAT;AACAD,MAAAA,EAAE,CAACE,MAAH,CAAU,OAAV,EAAmBH,IAAnB,EAAyB,UAAzB;AAEA,YAAMI,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuB,GAAvB,CAAb;AACAF,MAAAA,IAAI,CAACG,OAAL,GAAa,WAAb;AACAC,MAAAA,CAAC,CAACC,IAAF,GAAOhB,QAAP;AAEAe,MAAAA,CAAC,CAACE,KAAF,GARY,CASZ;AACA;AACA;AACA;AACA;AACA;AAED,KAlBD;AAoBC,GA7Be,CAAhB;AAgCA,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAiBlC,QAAQ,CAAC,EAAD,CAA/B;AAIJ,sBACU;AAAA,4BAKE,QAAC,MAAD;AACE,MAAA,KAAK,EAAE,KADT;AAEE,MAAA,MAAM,EAAE,GAFV;AAGE,MAAA,GAAG,EAAES,SAHP;AAIE,MAAA,gBAAgB,EAAC,YAJnB;AAKE,MAAA,KAAK,EAAE,GALT;AAME,MAAA,gBAAgB,EAAEL,gBANpB;AAOE,MAAA,QAAQ;AAPV;AAAA;AAAA;AAAA;AAAA,YALF,eAcE;AAAQ,MAAA,OAAO,EAAES,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAdF,EAeGF,KAAK,IAAE,EAAP,gBAAU;AAAK,MAAA,GAAG,EAAEA;AAAV;AAAA;AAAA;AAAA;AAAA,YAAV,GAA6B,EAfhC;AAAA,kBADV;AAmBO,CA3DE;;GAAMH,a;;MAAAA,a","sourcesContent":["import React, { Component, useState } from 'react';\nimport './cameraStyles.css'\nimport Webcam from \"react-webcam\";\nimport fs from 'fs'\n\nconst WebcamComponent = () => <Webcam />;\n\n\n\nconst videoConstraints = {\n    width: 260,\n    height: 260,\n    facingMode: \"user\"\n  };\n  \n  export const WebcamCapture = () => {\n    const webcamRef = React.useRef(null);\n    const [image,setImage]=useState('');\n  \n    const capture = React.useCallback(\n      () => {\n        const imageSrc = webcamRef.current.getScreenshot();\n        // console.log(imageSrc)\n        setImage(imageSrc)\n\n\n    var url =imageSrc\n\n    fetch(url)\n    .then(res => res.blob())\n    .then(blob => {\n      var fd = new FormData()\n      fd.append('image', blob, 'filename')\n\n      const link = document.createElement('a');\n      link.downlod=\"image/jpg\"\n      a.href=imageSrc;\n\n      a.click();\n      // fetch('https://speakupgenderapi.herokuapp.com/predict_api',\n      // {\n      //     mode:'no-cors',\n      //     method:'POST',\n      //     body:fd\n      // }).then(res=>console.log(res)).catch(err=>console.log(err))\n     \n    })\n\n    });\n\n\n    const [photo,setPhoto]=useState(\"\");\n\n\n  \nreturn (\n          <>\n          {/* <input type=\"file\" \n          onChange={(event)=>{setPhoto(event.target.files[0])}} \n          accept=\".jpg,.png,.jpeg\" />\n          <button onClick={uploadImage}>upload</button> */}\n            <Webcam\n              audio={false}\n              height={260}\n              ref={webcamRef}\n              screenshotFormat=\"image/jpeg\"\n              width={260}\n              videoConstraints={videoConstraints}\n              download\n            />\n            <button onClick={capture}>Capture photo</button>\n            {image!=''?<img src={image}/>:''}\n          </>\n        );\n      };    \n    \n\n"]},"metadata":{},"sourceType":"module"}