{"ast":null,"code":"var _jsxFileName = \"/Users/sristichowdhury/Desktop/bwHacks/client/src/components/grid/PostGrid.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport './poststyles.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faThumbsUp } from '@fortawesome/free-solid-svg-icons';\nimport { faThumbsDown } from '@fortawesome/free-solid-svg-icons';\nimport { Link, useHistory } from 'react-router-dom';\nimport { UserContext } from '../../App';\nimport Nav from '../nav/Nav';\nimport Footer from '../Footer/Footer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostGrid = () => {\n  _s();\n\n  const [allposts, setAllPosts] = useState('');\n  const [likes, setLikes] = useState('');\n  const {\n    state,\n    dispatch\n  } = useContext(UserContext);\n  const history = useHistory();\n  useEffect(async () => {\n    await fetch(\"http://localhost:5000/allPosts\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": \"Bearer\" + localStorage.getItem(\"jwt\")\n      },\n      method: \"get\"\n    }).then(res => res.json()).then(res => {\n      console.log(res.posts);\n      console.log(localStorage.getItem('user'));\n      setAllPosts(res.posts);\n    }).catch(err => console.log(err));\n  }, []);\n\n  const increment = async (id) => {\n    await fetch(\"http://localhost:5000/like\", {\n      method: \"put\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": \"Bearer\" + localStorage.getItem(\"jwt\")\n      },\n      body: JSON.stringify({\n        post_id: id\n      })\n    }).then(res => res.json()).then(result => {\n      setAllPosts(result.posts);\n    }).catch(err => alert(err));\n  };\n\n  const decrement = async (id) => {\n    await fetch(\"http://localhost:5000/unlike\", {\n      method: \"put\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": \"Bearer\" + localStorage.getItem(\"jwt\")\n      },\n      body: JSON.stringify({\n        post_id: id\n      })\n    }).then(res => res.json()).then(result => {\n      setAllPosts(result.posts);\n    }).catch(err => alert(err));\n  };\n\n  const PostCard = ({\n    post\n  }) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n          className: \"text-secondary\",\n          style: {\n            float: 'right'\n          },\n          children: post.postedBy == state._id ? 'Posted By You $#f1f8' : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"card-title\",\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: post.body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 24\n        }, this), !post.postedBy == state._id ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn\",\n            disabled: post.likes.includes(state._id),\n            onClick: () => increment(post._id),\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faThumbsUp,\n              className: \"icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 24\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 24\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn\",\n            onClick: () => decrement(post._id),\n            disabled: post.likes.length == 0,\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faThumbsDown,\n              className: \"icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 24\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 24\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              float: 'right'\n            },\n            children: [post.likes.length, \" Likes\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 24\n        }, this) : '']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"gridContainer\",\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"homegrid\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"card-columns\",\n        children: [allposts != '' && allposts.map(post => {\n          return /*#__PURE__*/_jsxDEV(PostCard, {\n            post: post\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 22\n          }, this);\n        }), allposts == '' ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"links\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/add\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"Add a Post\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 31\n        }, this) : '']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 1\n  }, this);\n};\n\n_s(PostGrid, \"Ild9v1QYNAdWs9K6DzZf4SwaHW8=\", false, function () {\n  return [useHistory];\n});\n\n_c = PostGrid;\nexport default PostGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostGrid\");","map":{"version":3,"sources":["/Users/sristichowdhury/Desktop/bwHacks/client/src/components/grid/PostGrid.js"],"names":["React","useContext","useEffect","useState","FontAwesomeIcon","faThumbsUp","faThumbsDown","Link","useHistory","UserContext","Nav","Footer","PostGrid","allposts","setAllPosts","likes","setLikes","state","dispatch","history","fetch","headers","localStorage","getItem","method","then","res","json","console","log","posts","catch","err","increment","id","body","JSON","stringify","post_id","result","alert","decrement","PostCard","post","float","postedBy","_id","title","includes","length","map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,OAAO,kBAAP;AAEA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,UAAT,QAA2B,mCAA3B;AACA,SAASC,YAAT,QAA6B,mCAA7B;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;AACA,SAASC,WAAT,QAA4B,WAA5B;AACA,OAAOC,GAAP,MAAgB,YAAhB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAGnB,QAAM,CAACC,QAAD,EAAUC,WAAV,IAAuBX,QAAQ,CAAC,EAAD,CAArC;AACA,QAAM,CAACY,KAAD,EAAOC,QAAP,IAAiBb,QAAQ,CAAC,EAAD,CAA/B;AAEA,QAAM;AAAEc,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsBjB,UAAU,CAACQ,WAAD,CAAtC;AAGA,QAAMU,OAAO,GAACX,UAAU,EAAxB;AACAN,EAAAA,SAAS,CAEL,YAAS;AACL,UAAMkB,KAAK,CAAC,gCAAD,EACX;AACEC,MAAAA,OAAO,EACP;AACE,wBAAe,kBADjB;AAEE,yBAAgB,WAASC,YAAY,CAACC,OAAb,CAAqB,KAArB;AAF3B,OAFF;AAMEC,MAAAA,MAAM,EAAC;AANT,KADW,CAAL,CAULC,IAVK,CAUAC,GAAG,IAAEA,GAAG,CAACC,IAAJ,EAVL,EAWLF,IAXK,CAWAC,GAAG,IACP;AACEE,MAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACI,KAAhB;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAYP,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAZ;AACAT,MAAAA,WAAW,CAACY,GAAG,CAACI,KAAL,CAAX;AACD,KAhBG,EAiBLC,KAjBK,CAiBCC,GAAG,IAAEJ,OAAO,CAACC,GAAR,CAAYG,GAAZ,CAjBN,CAAN;AAkBP,GArBQ,EAqBP,EArBO,CAAT;;AAwBA,QAAMC,SAAS,GAAG,OAAMC,EAAN,KAClB;AAEI,UAAMd,KAAK,CAAC,4BAAD,EACR;AACEI,MAAAA,MAAM,EAAC,KADT;AAEEH,MAAAA,OAAO,EACP;AACE,wBAAe,kBADjB;AAEE,yBAAgB,WAASC,YAAY,CAACC,OAAb,CAAqB,KAArB;AAF3B,OAHF;AAQEY,MAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CACA;AACIC,QAAAA,OAAO,EAACJ;AADZ,OADA;AARP,KADQ,CAAL,CAeAT,IAfA,CAeKC,GAAG,IAAEA,GAAG,CAACC,IAAJ,EAfV,EAgBFF,IAhBE,CAgBGc,MAAM,IACX;AACIzB,MAAAA,WAAW,CAACyB,MAAM,CAACT,KAAR,CAAX;AACH,KAnBC,EAmBCC,KAnBD,CAmBOC,GAAG,IAAEQ,KAAK,CAACR,GAAD,CAnBjB,CAAN;AAoBH,GAvBD;;AAyBA,QAAMS,SAAS,GAAG,OAAMP,EAAN,KAClB;AAEI,UAAMd,KAAK,CAAC,8BAAD,EACR;AACEI,MAAAA,MAAM,EAAC,KADT;AAEEH,MAAAA,OAAO,EACP;AACE,wBAAe,kBADjB;AAEE,yBAAgB,WAASC,YAAY,CAACC,OAAb,CAAqB,KAArB;AAF3B,OAHF;AAQEY,MAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CACA;AACIC,QAAAA,OAAO,EAACJ;AADZ,OADA;AARP,KADQ,CAAL,CAeAT,IAfA,CAeKC,GAAG,IAAEA,GAAG,CAACC,IAAJ,EAfV,EAgBFF,IAhBE,CAgBGc,MAAM,IACX;AACEzB,MAAAA,WAAW,CAACyB,MAAM,CAACT,KAAR,CAAX;AACD,KAnBC,EAmBCC,KAnBD,CAmBOC,GAAG,IAAEQ,KAAK,CAACR,GAAD,CAnBjB,CAAN;AAqBH,GAxBD;;AA0BA,QAAMU,QAAQ,GAAG,CAAC;AAACC,IAAAA;AAAD,GAAD,KACjB;AACE,wBACI;AAAK,MAAA,KAAK,EAAC,MAAX;AAAA,6BAEN;AAAK,QAAA,KAAK,EAAC,WAAX;AAAA,gCAGA;AAAI,UAAA,SAAS,EAAC,gBAAd;AACmB,UAAA,KAAK,EAAE;AAACC,YAAAA,KAAK,EAAC;AAAP,WAD1B;AAAA,oBAEsBD,IAAI,CAACE,QAAL,IAAe5B,KAAK,CAAC6B,GAArB,GACD,sBADC,GAED;AAJrB;AAAA;AAAA;AAAA;AAAA,gBAHA,eAQmB;AAAI,UAAA,SAAS,EAAC,YAAd;AAAA,oBAA4BH,IAAI,CAACI;AAAjC;AAAA;AAAA;AAAA;AAAA,gBARnB,eASmB;AAAG,UAAA,SAAS,EAAC,WAAb;AAAA,oBAA0BJ,IAAI,CAACR;AAA/B;AAAA;AAAA;AAAA;AAAA,gBATnB,EAWoB,CAACQ,IAAI,CAACE,QAAN,IAAgB5B,KAAK,CAAC6B,GAAtB,gBACD;AAAG,UAAA,SAAS,EAAC,WAAb;AAAA,kCACA;AAAQ,YAAA,SAAS,EAAC,KAAlB;AAAwB,YAAA,QAAQ,EAAEH,IAAI,CAAC5B,KAAL,CAAWiC,QAAX,CAAoB/B,KAAK,CAAC6B,GAA1B,CAAlC;AACA,YAAA,OAAO,EAAE,MAAIb,SAAS,CAACU,IAAI,CAACG,GAAN,CADtB;AAAA,mCAEA,QAAC,eAAD;AAAiB,cAAA,IAAI,EAAEzC,UAAvB;AAAmC,cAAA,SAAS,EAAC;AAA7C;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA,kBADA,eAKA;AAAQ,YAAA,SAAS,EAAC,KAAlB;AACC,YAAA,OAAO,EAAE,MAAIoC,SAAS,CAACE,IAAI,CAACG,GAAN,CADvB;AAEC,YAAA,QAAQ,EAAEH,IAAI,CAAC5B,KAAL,CAAWkC,MAAX,IAAmB,CAF9B;AAAA,mCAGA,QAAC,eAAD;AAAiB,cAAA,IAAI,EAAE3C,YAAvB;AACC,cAAA,SAAS,EAAC;AADX;AAAA;AAAA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA,kBALA,eAWC;AAAO,YAAA,KAAK,EAAE;AAACsC,cAAAA,KAAK,EAAC;AAAP,aAAd;AAAA,uBACGD,IAAI,CAAC5B,KAAL,CAAWkC,MADd;AAAA;AAAA;AAAA;AAAA;AAAA,kBAXD;AAAA;AAAA;AAAA;AAAA;AAAA,gBADC,GAcI,EAzBxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAFM;AAAA;AAAA;AAAA;AAAA,YADJ;AAgCD,GAlCD;;AAqCA,sBACJ;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,4BACQ,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,YADR,eAES;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BAEC;AAAK,QAAA,KAAK,EAAC,cAAX;AAAA,mBACOpC,QAAQ,IAAE,EAAV,IAAgBA,QAAQ,CAACqC,GAAT,CAAcP,IAAD,IAC9B;AACE,8BACG,QAAC,QAAD;AAAU,YAAA,IAAI,EAAEA;AAAhB;AAAA;AAAA;AAAA;AAAA,kBADH;AAGD,SALgB,CADvB,EAOO9B,QAAQ,IAAE,EAAV,gBAAa;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA,iCACd,QAAC,IAAD;AAAM,YAAA,EAAE,EAAC,MAAT;AAAA,mCAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAhB;AAAA;AAAA;AAAA;AAAA;AADc;AAAA;AAAA;AAAA;AAAA,gBAAb,GAEM,EATb;AAAA;AAAA;AAAA;AAAA;AAAA;AAFD;AAAA;AAAA;AAAA;AAAA,YAFT,eAgBY,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAhBZ;AAAA;AAAA;AAAA;AAAA;AAAA,UADI;AAoBH,CA9ID;;GAAMD,Q;UASYJ,U;;;KATZI,Q;AAgJN,eAAeA,QAAf","sourcesContent":["import React, { useContext, useEffect, useState } from 'react'\nimport './poststyles.css';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faThumbsUp } from '@fortawesome/free-solid-svg-icons'\nimport { faThumbsDown } from '@fortawesome/free-solid-svg-icons'\nimport { Link, useHistory } from 'react-router-dom';\nimport { UserContext } from '../../App';\nimport Nav from '../nav/Nav';\nimport Footer from '../Footer/Footer';\n\nconst PostGrid = () => {\n\n\n    const [allposts,setAllPosts]=useState('');\n    const [likes,setLikes]=useState('');\n\n    const { state, dispatch } = useContext(UserContext);\n\n\n    const history=useHistory();\n    useEffect(\n\n        async()=>{\n            await fetch(\"http://localhost:5000/allPosts\",\n            {\n              headers:\n              {\n                \"Content-Type\":\"application/json\",\n                \"Authorization\":\"Bearer\"+localStorage.getItem(\"jwt\")\n              },\n              method:\"get\"\n              \n            })\n            .then(res=>res.json())\n            .then(res=>\n              {\n                console.log(res.posts)\n                console.log(localStorage.getItem('user'))\n                setAllPosts(res.posts);\n              })\n            .catch(err=>console.log(err))\n    },[]);\n\n\n    const increment = async(id) =>\n    {\n        \n        await fetch(\"http://localhost:5000/like\",\n           {\n             method:\"put\",\n             headers: \n             {\n               \"Content-Type\":\"application/json\",\n               \"Authorization\":\"Bearer\"+localStorage.getItem(\"jwt\")\n      \n             },\n             body:JSON.stringify(\n                  {\n                      post_id:id\n                  }\n                )\n             \n           }).then(res=>res.json())\n           .then(result=>\n            {\n                setAllPosts(result.posts)\n            }).catch(err=>alert(err))\n    }\n\n    const decrement = async(id) =>\n    {\n        \n        await fetch(\"http://localhost:5000/unlike\",\n           {\n             method:\"put\",\n             headers: \n             {\n               \"Content-Type\":\"application/json\",\n               \"Authorization\":\"Bearer\"+localStorage.getItem(\"jwt\")\n      \n             },\n             body:JSON.stringify(\n                  {\n                      post_id:id\n                  }\n                )\n             \n           }).then(res=>res.json())\n           .then(result=>\n            {\n              setAllPosts(result.posts)\n            }).catch(err=>alert(err))\n        \n    }\n\n    const PostCard = ({post})=>\n    {\n      return (\n          <div class=\"card\">\n    \n    <div class=\"card-body\">\n      \n    \n    <h6 className=\"text-secondary\" \n                       style={{float:'right'}}>\n                         {post.postedBy==state._id?\n                         'Posted By You $#f1f8':\n                         ''}</h6>\n                       <h3 className=\"card-title\">{post.title}</h3>\n                       <p className=\"card-text\">{post.body}</p>\n                      \n                       {!post.postedBy==state._id?\n                       <p className=\"card-text\">\n                       <button className=\"btn\" disabled={post.likes.includes(state._id)}\n                       onClick={()=>increment(post._id)}>\n                       <FontAwesomeIcon icon={faThumbsUp} className=\"icon\"/>\n                       </button>\n                       <button className=\"btn\"\n                        onClick={()=>decrement(post._id)}\n                        disabled={post.likes.length==0}>\n                       <FontAwesomeIcon icon={faThumbsDown}  \n                        className=\"icon\" />\n                       </button>\n                        <label style={{float:'right'}}>\n                          {post.likes.length} Likes</label>\n                       </p>:''}\n        </div></div>\n               \n          )\n    }\n\n\n    return (\n<div className=\"gridContainer\">\n        <Nav/>\n         <div className=\"homegrid\">\n            \n          <div class=\"card-columns\">\n                {allposts!='' && allposts.map((post)=>\n                {\n                  return(\n                     <PostCard post={post}/>\n                  )\n                })}\n                {allposts==''?<div className=\"links\">\n                <Link to=\"/add\"><button>Add a Post</button></Link>\n                </div>:''}\n            </div>\n            </div>\n            <Footer/>\n            </div>\n    )\n}\n\nexport default PostGrid\n\n\n"]},"metadata":{},"sourceType":"module"}