{"ast":null,"code":"var _jsxFileName = \"/Users/sristichowdhury/Desktop/bwHacks/client/src/components/grid/PostGrid.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport './poststyles.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faThumbsUp } from '@fortawesome/free-solid-svg-icons';\nimport { faThumbsDown } from '@fortawesome/free-solid-svg-icons';\nimport { Link, useHistory } from 'react-router-dom';\nimport { UserContext } from '../../App';\nimport Nav from '../nav/Nav';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostGrid = () => {\n  _s();\n\n  const [allposts, setAllPosts] = useState('');\n  const [likes, setLikes] = useState('');\n  const {\n    state,\n    dispatch\n  } = useContext(UserContext);\n  const history = useHistory();\n  useEffect(async () => {\n    await fetch(\"http://localhost:5000/allPosts\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": \"Bearer\" + localStorage.getItem(\"jwt\")\n      },\n      method: \"get\"\n    }).then(res => res.json()).then(res => {\n      setAllPosts(res.posts);\n    }).catch(err => console.log(err));\n  }, []);\n\n  const increment = async (id) => {\n    await fetch(\"http://localhost:5000/like\", {\n      method: \"put\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": \"Bearer\" + localStorage.getItem(\"jwt\")\n      },\n      body: JSON.stringify({\n        post_id: id\n      })\n    }).then(res => res.json()).then(result => {\n      setAllPosts(result.posts);\n    }).catch(err => alert(err));\n  };\n\n  const decrement = async (id) => {\n    await fetch(\"http://localhost:5000/unlike\", {\n      method: \"put\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": \"Bearer\" + localStorage.getItem(\"jwt\")\n      },\n      body: JSON.stringify({\n        post_id: id\n      })\n    }).then(res => res.json()).then(result => {\n      setAllPosts(result.posts);\n    }).catch(err => alert(err));\n  };\n\n  const PostCard = ({\n    post\n  }) => {\n    return (\n      /*#__PURE__*/\n      //           <div class=\"card bg-dark text-white\">\n      //   <img class=\"card-img\" src=\"...\" alt=\"Card image\">\n      //   <div class=\"card-img-overlay\">\n      //     <h5 class=\"card-title\">Card title</h5>\n      //     <p class=\"card-text\">This is a wider card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.</p>\n      //     <p class=\"card-text\">Last updated 3 mins ago</p>\n      //   </div>\n      // </div>\n      _jsxDEV(\"div\", {\n        className: \"col cards-col col-lg-4 col-md-6 col-12\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"card-img-top\",\n            style: {\n              backgroundSize: \"contain\"\n            },\n            src: \"https://image.freepik.com/free-vector/hand-drawn-womens-day-concept_23-2148435898.jpg\",\n            alt: \"Card image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-img-overlay\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"body\",\n              style: {\n                padding: '10px 20px',\n                fontWeight: 'bolder'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                className: \"text-secondary\",\n                style: {\n                  float: 'right'\n                },\n                children: \"Anonymous\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 14\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"card-title\",\n                children: post.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 27\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-text\",\n                children: post.body\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 27\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"footer-card\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn\",\n                  style: {\n                    marginRight: '5px',\n                    color: 'black'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                    icon: faThumbsUp,\n                    className: \"icon\",\n                    onClick: () => increment(post._id)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 121,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn\",\n                  children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                    icon: faThumbsDown,\n                    className: \"icon\",\n                    onClick: () => decrement(post._id)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 124,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  style: {\n                    float: 'right'\n                  },\n                  children: [post.likes, \" Likes\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 27\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 14\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }, this)\n    );\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"gridContainer\",\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"homegrid\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [allposts != '' && allposts.map(post => {\n          return /*#__PURE__*/_jsxDEV(PostCard, {\n            post: post\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 22\n          }, this);\n        }), allposts == '' ? /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Add Posts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 31\n        }, this) : '']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 1\n  }, this);\n};\n\n_s(PostGrid, \"Ild9v1QYNAdWs9K6DzZf4SwaHW8=\", false, function () {\n  return [useHistory];\n});\n\n_c = PostGrid;\nexport default PostGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostGrid\");","map":{"version":3,"sources":["/Users/sristichowdhury/Desktop/bwHacks/client/src/components/grid/PostGrid.js"],"names":["React","useContext","useEffect","useState","FontAwesomeIcon","faThumbsUp","faThumbsDown","Link","useHistory","UserContext","Nav","PostGrid","allposts","setAllPosts","likes","setLikes","state","dispatch","history","fetch","headers","localStorage","getItem","method","then","res","json","posts","catch","err","console","log","increment","id","body","JSON","stringify","post_id","result","alert","decrement","PostCard","post","backgroundSize","padding","fontWeight","float","title","marginRight","color","_id","map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,OAAO,kBAAP;AAEA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,UAAT,QAA2B,mCAA3B;AACA,SAASC,YAAT,QAA6B,mCAA7B;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;AACA,SAASC,WAAT,QAA4B,WAA5B;AACA,OAAOC,GAAP,MAAgB,YAAhB;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAGnB,QAAM,CAACC,QAAD,EAAUC,WAAV,IAAuBV,QAAQ,CAAC,EAAD,CAArC;AACA,QAAM,CAACW,KAAD,EAAOC,QAAP,IAAiBZ,QAAQ,CAAC,EAAD,CAA/B;AAEA,QAAM;AAAEa,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsBhB,UAAU,CAACQ,WAAD,CAAtC;AAGA,QAAMS,OAAO,GAACV,UAAU,EAAxB;AAEAN,EAAAA,SAAS,CACL,YAAS;AACL,UAAMiB,KAAK,CAAC,gCAAD,EACX;AACEC,MAAAA,OAAO,EACP;AACE,wBAAe,kBADjB;AAEE,yBAAgB,WAASC,YAAY,CAACC,OAAb,CAAqB,KAArB;AAF3B,OAFF;AAMEC,MAAAA,MAAM,EAAC;AANT,KADW,CAAL,CAULC,IAVK,CAUAC,GAAG,IAAEA,GAAG,CAACC,IAAJ,EAVL,EAWLF,IAXK,CAWAC,GAAG,IACP;AACEZ,MAAAA,WAAW,CAACY,GAAG,CAACE,KAAL,CAAX;AACD,KAdG,EAeLC,KAfK,CAeCC,GAAG,IAAEC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAfN,CAAN;AAgBP,GAlBQ,EAkBP,EAlBO,CAAT;;AAqBA,QAAMG,SAAS,GAAG,OAAMC,EAAN,KAClB;AAEI,UAAMd,KAAK,CAAC,4BAAD,EACR;AACEI,MAAAA,MAAM,EAAC,KADT;AAEEH,MAAAA,OAAO,EACP;AACE,wBAAe,kBADjB;AAEE,yBAAgB,WAASC,YAAY,CAACC,OAAb,CAAqB,KAArB;AAF3B,OAHF;AAQEY,MAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CACA;AACIC,QAAAA,OAAO,EAACJ;AADZ,OADA;AARP,KADQ,CAAL,CAeAT,IAfA,CAeKC,GAAG,IAAEA,GAAG,CAACC,IAAJ,EAfV,EAgBFF,IAhBE,CAgBGc,MAAM,IACX;AACIzB,MAAAA,WAAW,CAACyB,MAAM,CAACX,KAAR,CAAX;AACH,KAnBC,EAmBCC,KAnBD,CAmBOC,GAAG,IAAEU,KAAK,CAACV,GAAD,CAnBjB,CAAN;AAqBH,GAxBD;;AA0BA,QAAMW,SAAS,GAAG,OAAMP,EAAN,KAClB;AAEI,UAAMd,KAAK,CAAC,8BAAD,EACR;AACEI,MAAAA,MAAM,EAAC,KADT;AAEEH,MAAAA,OAAO,EACP;AACE,wBAAe,kBADjB;AAEE,yBAAgB,WAASC,YAAY,CAACC,OAAb,CAAqB,KAArB;AAF3B,OAHF;AAQEY,MAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CACA;AACIC,QAAAA,OAAO,EAACJ;AADZ,OADA;AARP,KADQ,CAAL,CAeAT,IAfA,CAeKC,GAAG,IAAEA,GAAG,CAACC,IAAJ,EAfV,EAgBFF,IAhBE,CAgBGc,MAAM,IACX;AACIzB,MAAAA,WAAW,CAACyB,MAAM,CAACX,KAAR,CAAX;AACH,KAnBC,EAmBCC,KAnBD,CAmBOC,GAAG,IAAEU,KAAK,CAACV,GAAD,CAnBjB,CAAN;AAqBH,GAxBD;;AA0BA,QAAMY,QAAQ,GAAG,CAAC;AAACC,IAAAA;AAAD,GAAD,KACjB;AACI;AAAA;AAGR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEY;AAAK,QAAA,SAAS,EAAC,wCAAf;AAAA,+BACA;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA,kCACA;AAAK,YAAA,SAAS,EAAC,cAAf;AAA+B,YAAA,KAAK,EAAE;AAACC,cAAAA,cAAc,EAAC;AAAhB,aAAtC;AACA,YAAA,GAAG,EAAC,uFADJ;AAEA,YAAA,GAAG,EAAC;AAFJ;AAAA;AAAA;AAAA;AAAA,kBADA,eAIA;AAAK,YAAA,SAAS,EAAC,kBAAf;AAAA,mCACC;AAAK,cAAA,SAAS,EAAC,MAAf;AAAuB,cAAA,KAAK,EAAE;AAACC,gBAAAA,OAAO,EAAC,WAAT;AAAqBC,gBAAAA,UAAU,EAAC;AAAhC,eAA9B;AAAA,sCACA;AAAI,gBAAA,SAAS,EAAC,gBAAd;AAA+B,gBAAA,KAAK,EAAE;AAACC,kBAAAA,KAAK,EAAC;AAAP,iBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADA,eAEa;AAAI,gBAAA,SAAS,EAAC,YAAd;AAAA,0BAA4BJ,IAAI,CAACK;AAAjC;AAAA;AAAA;AAAA;AAAA,sBAFb,eAGa;AAAG,gBAAA,SAAS,EAAC,WAAb;AAAA,0BAA0BL,IAAI,CAACR;AAA/B;AAAA;AAAA;AAAA;AAAA,sBAHb,eAIa;AAAK,gBAAA,SAAS,EAAC,aAAf;AAAA,wCACA;AAAQ,kBAAA,SAAS,EAAC,KAAlB;AAAwB,kBAAA,KAAK,EAAE;AAACc,oBAAAA,WAAW,EAAC,KAAb;AAAmBC,oBAAAA,KAAK,EAAC;AAAzB,mBAA/B;AAAA,yCACA,QAAC,eAAD;AAAiB,oBAAA,IAAI,EAAE5C,UAAvB;AAAmC,oBAAA,SAAS,EAAC,MAA7C;AAAoD,oBAAA,OAAO,EAAE,MAAI2B,SAAS,CAACU,IAAI,CAACQ,GAAN;AAA1E;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,wBADA,eAIA;AAAQ,kBAAA,SAAS,EAAC,KAAlB;AAAA,yCACA,QAAC,eAAD;AAAiB,oBAAA,IAAI,EAAE5C,YAAvB;AAAqC,oBAAA,SAAS,EAAC,MAA/C;AAAsD,oBAAA,OAAO,EAAE,MAAIkC,SAAS,CAACE,IAAI,CAACQ,GAAN;AAA5E;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,wBAJA,eAOA;AAAO,kBAAA,KAAK,EAAE;AAACJ,oBAAAA,KAAK,EAAC;AAAP,mBAAd;AAAA,6BAAgCJ,IAAI,CAAC5B,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA,wBAPA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,kBAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAZJ;AAqCH,GAvCD;;AA0CA,sBACJ;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,4BACQ,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,YADR,eAES;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACG;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,mBACKF,QAAQ,IAAE,EAAV,IAAgBA,QAAQ,CAACuC,GAAT,CAAcT,IAAD,IAC9B;AACE,8BACG,QAAC,QAAD;AAAU,YAAA,IAAI,EAAEA;AAAhB;AAAA;AAAA;AAAA;AAAA,kBADH;AAGD,SALgB,CADrB,EAOK9B,QAAQ,IAAE,EAAV,gBAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAb,GAAgC,EAPrC;AAAA;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,YAFT;AAAA;AAAA;AAAA;AAAA;AAAA,UADI;AAgBH,CA9ID;;GAAMD,Q;UASYH,U;;;KATZG,Q;AAgJN,eAAeA,QAAf","sourcesContent":["import React, { useContext, useEffect, useState } from 'react'\nimport './poststyles.css';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faThumbsUp } from '@fortawesome/free-solid-svg-icons'\nimport { faThumbsDown } from '@fortawesome/free-solid-svg-icons'\nimport { Link, useHistory } from 'react-router-dom';\nimport { UserContext } from '../../App';\nimport Nav from '../nav/Nav';\n\nconst PostGrid = () => {\n\n\n    const [allposts,setAllPosts]=useState('');\n    const [likes,setLikes]=useState('');\n\n    const { state, dispatch } = useContext(UserContext);\n\n\n    const history=useHistory();\n\n    useEffect(\n        async()=>{\n            await fetch(\"http://localhost:5000/allPosts\",\n            {\n              headers:\n              {\n                \"Content-Type\":\"application/json\",\n                \"Authorization\":\"Bearer\"+localStorage.getItem(\"jwt\")\n              },\n              method:\"get\"\n              \n            })\n            .then(res=>res.json())\n            .then(res=>\n              {\n                setAllPosts(res.posts);\n              })\n            .catch(err=>console.log(err))\n    },[]);\n\n\n    const increment = async(id) =>\n    {\n        \n        await fetch(\"http://localhost:5000/like\",\n           {\n             method:\"put\",\n             headers: \n             {\n               \"Content-Type\":\"application/json\",\n               \"Authorization\":\"Bearer\"+localStorage.getItem(\"jwt\")\n      \n             },\n             body:JSON.stringify(\n                  {\n                      post_id:id\n                  }\n                )\n             \n           }).then(res=>res.json())\n           .then(result=>\n            {\n                setAllPosts(result.posts)\n            }).catch(err=>alert(err))\n        \n    }\n\n    const decrement = async(id) =>\n    {\n        \n        await fetch(\"http://localhost:5000/unlike\",\n           {\n             method:\"put\",\n             headers: \n             {\n               \"Content-Type\":\"application/json\",\n               \"Authorization\":\"Bearer\"+localStorage.getItem(\"jwt\")\n      \n             },\n             body:JSON.stringify(\n                  {\n                      post_id:id\n                  }\n                )\n             \n           }).then(res=>res.json())\n           .then(result=>\n            {\n                setAllPosts(result.posts)\n            }).catch(err=>alert(err))\n        \n    }\n\n    const PostCard = ({post})=>\n    {\n        return (\n\n\n//           <div class=\"card bg-dark text-white\">\n//   <img class=\"card-img\" src=\"...\" alt=\"Card image\">\n//   <div class=\"card-img-overlay\">\n//     <h5 class=\"card-title\">Card title</h5>\n//     <p class=\"card-text\">This is a wider card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.</p>\n//     <p class=\"card-text\">Last updated 3 mins ago</p>\n//   </div>\n// </div>\n             \n            <div className=\"col cards-col col-lg-4 col-md-6 col-12\">\n            <div className=\"card\">\n            <img className=\"card-img-top\"  style={{backgroundSize:\"contain\"}}\n            src=\"https://image.freepik.com/free-vector/hand-drawn-womens-day-concept_23-2148435898.jpg\"\n            alt=\"Card image\"/>\n            <div className=\"card-img-overlay\">\n             <div className=\"body\"  style={{padding:'10px 20px',fontWeight:'bolder'}}>\n             <h6 className=\"text-secondary\" style={{float:'right'}}>Anonymous</h6>\n                          <h3 className=\"card-title\">{post.title}</h3>\n                          <p className=\"card-text\">{post.body}</p>\n                          <div className=\"footer-card\">\n                          <button className=\"btn\" style={{marginRight:'5px',color:'black'}}>\n                          <FontAwesomeIcon icon={faThumbsUp} className=\"icon\" onClick={()=>increment(post._id)}/>\n                          </button>\n                          <button className=\"btn\">\n                          <FontAwesomeIcon icon={faThumbsDown} className=\"icon\" onClick={()=>decrement(post._id)}/>\n                          </button>\n                          <label style={{float:'right'}}>{post.likes} Likes</label>\n                          </div>\n             </div>\n           \n            </div>\n            </div>\n            </div>\n        )\n    }\n\n\n    return (\n<div className=\"gridContainer\">\n        <Nav/>\n         <div className=\"homegrid\">\n            <div className=\"row\">\n                {allposts!='' && allposts.map((post)=>\n                {\n                  return(\n                     <PostCard post={post}/>\n                  )\n                })}\n                {allposts==''?<h1>Add Posts</h1>:''}\n            </div>\n            </div>\n            </div>\n    )\n}\n\nexport default PostGrid\n"]},"metadata":{},"sourceType":"module"}