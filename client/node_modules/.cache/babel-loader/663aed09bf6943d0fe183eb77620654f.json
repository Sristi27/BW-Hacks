{"ast":null,"code":"var _jsxFileName = \"/Users/sristichowdhury/Desktop/bwHacks/client/src/components/camera-feed.jsx\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './cameraStyles.css';\nimport Camera from 'react-camera';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar base64Img = require('base64-img');\n\nexport class CameraFeed extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.uploadImage = fileObj => {\n      console.log(fileObj); // return fetch(url, {\n      //   method: 'POST',\n      //   headers: {\n      //     'Accept': 'image/jpeg'\n      //   },\n      //   body: fileObj\n      // })\n      //   .then((response) => response.json())\n      //   .then(function (response) {\n      //     if (response.status === 'success') {\n      //       console.log(response);\n      //       // ... Show feedback\n      //       return response\n      //     } else {\n      //       // ... Show feedback\n      //     }\n      //   })\n      //   .catch((error) => {\n      //     console.error(error)\n      //   });\n    };\n\n    this.takePicture = () => {\n      this.camera.capture().then(blob => {\n        console.log(blob);\n        const image = fs.readFileSync(blob.path);\n        const b64Image = Buffer.from(image).toString('base64');\n        c(uploadImage(b64image)); // this.uploadImage(blob)\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Camera, {\n      ref: cam => {\n        this.camera = cam;\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.takePicture,\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-camera\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 17\n        }, this), \" \\xA0 Take photo\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/sristichowdhury/Desktop/bwHacks/client/src/components/camera-feed.jsx"],"names":["React","Component","Link","Camera","base64Img","require","CameraFeed","uploadImage","fileObj","console","log","takePicture","camera","capture","then","blob","image","fs","readFileSync","path","b64Image","Buffer","from","toString","c","b64image","render","cam"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAO,oBAAP;AACA,OAAOC,MAAP,MAAmB,cAAnB;;;AACA,IAAIC,SAAS,GAAGC,OAAO,CAAC,YAAD,CAAvB;;AAEA,OAAO,MAAMC,UAAN,SAAyBL,SAAzB,CAAmC;AAAA;AAAA;;AAAA,SA6FrCM,WA7FqC,GA6FtBC,OAAD,IAAa;AAExBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ,EAFwB,CAGxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,KApHmC;;AAAA,SAsHpCG,WAtHoC,GAsHtB,MAAM;AAClB,WAAKC,MAAL,CAAYC,OAAZ,GACGC,IADH,CACQC,IAAI,IAAI;AACZN,QAAAA,OAAO,CAACC,GAAR,CAAYK,IAAZ;AACA,cAAMC,KAAK,GAAGC,EAAE,CAACC,YAAH,CAAgBH,IAAI,CAACI,IAArB,CAAd;AACD,cAAMC,QAAQ,GAAGC,MAAM,CAACC,IAAP,CAAYN,KAAZ,EAAmBO,QAAnB,CAA4B,QAA5B,CAAjB;AACLC,QAAAA,CAAC,CAACjB,WAAW,CAACkB,QAAD,CAAZ,CAAD,CAJkB,CAKZ;AACD,OAPH;AAQD,KA/HmC;AAAA;;AAkItCC,EAAAA,MAAM,GAAG;AACL,wBACI,QAAC,MAAD;AACA,MAAA,GAAG,EAAGC,GAAD,IAAS;AACV,aAAKf,MAAL,GAAce,GAAd;AACH,OAHD;AAAA,6BAKA;AAAQ,QAAA,OAAO,EAAE,KAAKhB,WAAtB;AAAA,gCACI;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AALA;AAAA;AAAA;AAAA;AAAA,YADJ;AAWH;;AA9IqC","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './cameraStyles.css'\nimport Camera from 'react-camera'\nvar base64Img = require('base64-img');\n\nexport class CameraFeed extends Component {\n    // /**\n    //  * Processes available devices and identifies one by the label\n    //  * @memberof CameraFeed\n    //  * @instance\n    //  */\n\n\n    // val=''\n\n    // processDevices(devices) {\n    //     devices.forEach(device => {\n    //         // console.log(device.label);\n    //         this.setDevice(device);\n    //     });\n    // }\n\n    // /**\n    //  * Sets the active device and starts playing the feed\n    //  * @memberof CameraFeed\n    //  * @instance\n    //  */\n    // // async setDevice(device) {\n    // //     const { deviceId } = device;\n    // //     const stream = await navigator.mediaDevices.getUserMedia(\n    // //         { audio: false, video: { deviceId } });\n    // //     this.videoPlayer.srcObject = stream;\n    // //     this.videoPlayer.play();\n    // // }\n\n    // /**\n    //  * On mount, grab the users connected devices and process them\n    //  * @memberof CameraFeed\n    //  * @instance\n    //  * @override\n    //  */\n    // // async componentDidMount() {\n    // //     const cameras = await navigator.mediaDevices.enumerateDevices();\n    // //     this.processDevices(cameras);\n    // // }\n\n    // /**\n    //  * Handles taking a still image from the video feed on the camera\n    //  * @memberof CameraFeed\n    //  * @instance\n    //  */\n\n    // takePhoto = () => {\n    //     const { sendFile } = this.props;\n    //     const context = this.canvas.getContext('2d');\n    //     context.drawImage(this.videoPlayer, 0, 0, 280, 260);\n    //     this.canvas.toBlob(sendFile);\n    //     // oCtx.drawImage(oColorImg, 0, 0);\n    //     var oImgData = context.getImageData(0, 0, 280, 260);\n    //     context.putImageData(oImgData, 0, 0);\n    //     var oGrayImg = new Image();\n    //     oGrayImg.src = this.canvas.toDataURL();\n    // //     let base64ToString = Buffer.from(oGrayImg.sr\n    // //         , \"base64\").toString()\n    // //    console.log(base64ToString)\n    // //     console.log(oGrayImg)\n\n\n    //     var filepath = base64Img.imgSync(oGrayImg.src, '', '2');\n\n\n\n    //     fetch('https://speakupgenderapi.herokuapp.com/predict_api',\n    //     {\n    //         mode: 'no-cors',\n    //         method:'post',\n    //         body:JSON.stringify({file:oGrayImg.src})\n    //     })\n    //     // .then(res=>res.json()).\n    //     .then(res=>console.log(res)).\n    //     catch(err=>console.log(err))\n    // }\n\n    // downloadCanvas = ()=> {\n\n    //     let link = document.createElement(\"a\");\n    //     link.download = \"image.png\";\n    //     this.canvas.toBlob(function(blob) {\n    //     link.href = URL.createObjectURL(blob);\n    //     // link.click();\n    //     },);\n\n    //     }\n\n    \n\n    \n      \n     uploadImage = (fileObj) => {\n      \n        console.log(fileObj)\n        // return fetch(url, {\n        //   method: 'POST',\n        //   headers: {\n        //     'Accept': 'image/jpeg'\n        //   },\n        //   body: fileObj\n        // })\n        //   .then((response) => response.json())\n        //   .then(function (response) {\n        //     if (response.status === 'success') {\n        //       console.log(response);\n        //       // ... Show feedback\n        //       return response\n        //     } else {\n        //       // ... Show feedback\n        //     }\n        //   })\n        //   .catch((error) => {\n        //     console.error(error)\n        //   });\n      }\n\n      takePicture = () => {\n        this.camera.capture()\n          .then(blob => {\n            console.log(blob);\n            const image = fs.readFileSync(blob.path);\n           const b64Image = Buffer.from(image).toString('base64');\n      c(uploadImage(b64image));\n            // this.uploadImage(blob)\n          })\n      }\n\n\n    render() {\n        return (\n            <Camera\n            ref={(cam) => {\n                this.camera = cam;\n            }}\n            >\n            <button onClick={this.takePicture}>\n                <i className=\"fas fa-camera\"></i> &nbsp; Take photo\n            </button>\n            </Camera>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}