{"ast":null,"code":"var _jsxFileName = \"/Users/sristichowdhury/Desktop/bwHacks/client/src/components/grid/PostGrid.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport './poststyles.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faThumbsUp } from '@fortawesome/free-solid-svg-icons';\nimport { faThumbsDown } from '@fortawesome/free-solid-svg-icons';\nimport { Link, useHistory } from 'react-router-dom';\nimport { UserContext } from '../../App';\nimport Nav from '../nav/Nav';\nimport Footer from '../Footer/Footer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostGrid = () => {\n  _s();\n\n  const [allposts, setAllPosts] = useState('');\n  const [likes, setLikes] = useState('');\n  const {\n    state,\n    dispatch\n  } = useContext(UserContext);\n  const history = useHistory();\n  useEffect(async () => {\n    await fetch(\"http://localhost:5000/allPosts\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": \"Bearer\" + localStorage.getItem(\"jwt\")\n      },\n      method: \"get\"\n    }).then(res => res.json()).then(res => {\n      // console.log(res.posts)\n      // console.log(localStorage.getItem('user'))\n      setAllPosts(res.posts);\n    }).catch(err => console.log(err));\n  }, []);\n\n  const increment = async (id) => {\n    await fetch(\"http://localhost:5000/like\", {\n      method: \"put\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": \"Bearer\" + localStorage.getItem(\"jwt\")\n      },\n      body: JSON.stringify({\n        post_id: id\n      })\n    }).then(res => res.json()).then(result => {\n      console.log(result);\n    }).catch(err => alert(err));\n  };\n\n  const decrement = async (id) => {\n    await fetch(\"http://localhost:5000/unlike\", {\n      method: \"put\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": \"Bearer\" + localStorage.getItem(\"jwt\")\n      },\n      body: JSON.stringify({\n        post_id: id\n      })\n    }).then(res => res.json()).then(result => {\n      setAllPosts(result.posts);\n    }).catch(err => alert(err));\n  };\n\n  const delPost = async (id) => {\n    await fetch(\"http://localhost:5000/deletePost\", {\n      method: 'delete',\n      header: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": \"Bearer\" + localStorage.getItem(\"jwt\")\n      },\n      body: JSON.stringify({\n        post_id: id\n      })\n    }).then(res => res.json()).then(result => {\n      alert(result.message);\n      setAllPosts(result.posts);\n    }).catch(err => alert(err));\n  };\n\n  const PostCard = ({\n    post\n  }) => {\n    const postedBy = post.postedBy;\n    console.log(postedBy, state._id);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"card-body\",\n        children: [postedBy == state._id ? /*#__PURE__*/_jsxDEV(\"h6\", {\n          className: \"text-secondary\",\n          style: {\n            float: 'right'\n          },\n          children: \"Posted By You\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 6\n        }, this) : /*#__PURE__*/_jsxDEV(\"h6\", {\n          className: \"text-secondary\",\n          style: {\n            float: 'right'\n          },\n          children: \"Anonymous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"card-title\",\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: post.body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 24\n        }, this), postedBy == state._id ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          style: {\n            width: '30%',\n            margin: '0 auto'\n          },\n          onClick: () => delPost(post._id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn\",\n            disabled: post.likes.includes(state._id),\n            onClick: () => increment(post._id),\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faThumbsUp,\n              className: \"icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 24\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 24\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn\",\n            onClick: () => decrement(post._id),\n            disabled: post.likes.length == 0,\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faThumbsDown,\n              className: \"icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 24\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 24\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              float: 'right'\n            },\n            children: [post.likes.length, \" Likes\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"gridContainer\",\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"homegrid\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"card-columns\",\n        children: [allposts != '' && allposts.map(post => {\n          return /*#__PURE__*/_jsxDEV(PostCard, {\n            post: post\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 22\n          }, this);\n        }), allposts == '' ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"links\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/add\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"Add a Post\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 31\n        }, this) : '']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 1\n  }, this);\n};\n\n_s(PostGrid, \"Ild9v1QYNAdWs9K6DzZf4SwaHW8=\", false, function () {\n  return [useHistory];\n});\n\n_c = PostGrid;\nexport default PostGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostGrid\");","map":{"version":3,"sources":["/Users/sristichowdhury/Desktop/bwHacks/client/src/components/grid/PostGrid.js"],"names":["React","useContext","useEffect","useState","FontAwesomeIcon","faThumbsUp","faThumbsDown","Link","useHistory","UserContext","Nav","Footer","PostGrid","allposts","setAllPosts","likes","setLikes","state","dispatch","history","fetch","headers","localStorage","getItem","method","then","res","json","posts","catch","err","console","log","increment","id","body","JSON","stringify","post_id","result","alert","decrement","delPost","header","message","PostCard","post","postedBy","_id","float","title","width","margin","includes","length","map"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react'\nimport './poststyles.css';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faThumbsUp } from '@fortawesome/free-solid-svg-icons'\nimport { faThumbsDown } from '@fortawesome/free-solid-svg-icons'\nimport { Link, useHistory } from 'react-router-dom';\nimport { UserContext } from '../../App';\nimport Nav from '../nav/Nav';\nimport Footer from '../Footer/Footer';\n\nconst PostGrid = () => {\n\n\n    const [allposts,setAllPosts]=useState('');\n    const [likes,setLikes]=useState('');\n\n    const { state, dispatch } = useContext(UserContext);\n\n\n    const history=useHistory();\n    \n    useEffect(\n      async()=>\n      {\n      await fetch(\"http://localhost:5000/allPosts\",\n      {\n        headers:\n        {\n          \"Content-Type\":\"application/json\",\n          \"Authorization\":\"Bearer\"+localStorage.getItem(\"jwt\")\n        },\n        method:\"get\"\n        \n      })\n      .then(res=>res.json())\n      .then(res=>\n        {\n          // console.log(res.posts)\n          // console.log(localStorage.getItem('user'))\n          setAllPosts(res.posts);\n        })\n      .catch(err=>console.log(err))\n    },[]);\n\n    const increment = async(id) =>\n    {\n        \n        await fetch(\"http://localhost:5000/like\",\n           {\n             method:\"put\",\n             headers: \n             {\n               \"Content-Type\":\"application/json\",\n               \"Authorization\":\"Bearer\"+localStorage.getItem(\"jwt\")\n      \n             },\n             body:JSON.stringify(\n                  {\n                      post_id:id\n                  }\n                )\n             \n           }).then(res=>res.json())\n           .then(result=>\n            {\n              console.log(result)\n            }).catch(err=>alert(err))\n    }\n\n    const decrement = async(id) =>\n    {\n        \n        await fetch(\"http://localhost:5000/unlike\",\n           {\n             method:\"put\",\n             headers: \n             {\n               \"Content-Type\":\"application/json\",\n               \"Authorization\":\"Bearer\"+localStorage.getItem(\"jwt\")\n      \n             },\n             body:JSON.stringify(\n                  {\n                      post_id:id\n                  }\n                )\n             \n           }).then(res=>res.json())\n           .then(result=>\n            {\n              setAllPosts(result.posts)\n            }).catch(err=>alert(err))\n        \n    }\n\n    const delPost = async(id) =>\n    {\n        await fetch(\"http://localhost:5000/deletePost\",\n        {\n          method:'delete',\n          header:\n          {\n            \"Content-Type\":\"application/json\",\n            \"Authorization\":\"Bearer\"+localStorage.getItem(\"jwt\")\n      \n          },\n          body:JSON.stringify(\n               {\n                   post_id:id\n               }\n             )\n          \n        }).then(res=>res.json())\n        .then(result=>\n         {\n           alert(result.message);\n           setAllPosts(result.posts);\n         }).catch(err=>alert(err))\n     \n    }\n\n    const PostCard = ({post})=>\n    {\n      const postedBy=post.postedBy;\n      console.log(postedBy,state._id)\n      return (\n          <div class=\"card\">\n    \n    <div class=\"card-body\">\n      \n    {postedBy==state._id?\n     <h6 className=\"text-secondary\" \n     style={{float:'right'}}>Posted By You</h6>:\n     <h6\n     className=\"text-secondary\" \n     style={{float:'right'}}>Anonymous</h6>\n    }\n   \n                       <h3 className=\"card-title\">{post.title}</h3>\n                       <p className=\"card-text\">{post.body}</p>\n                      \n                      {/* delete only if added by that user */}\n                      {/* else like/unlike  */}\n                       {postedBy==state._id?\n\n                        <button className=\"btn\"\n                        style={{width:'30%',margin:'0 auto'}}\n                       onClick={()=>delPost(post._id)}>Delete</button>:\n\n                       <p className=\"card-text\">\n                       <button className=\"btn\" \n                       disabled={post.likes.includes(state._id)}\n                       onClick={()=>increment(post._id)}>\n                       <FontAwesomeIcon icon={faThumbsUp} className=\"icon\"/>\n                       </button>\n                       <button className=\"btn\"\n                        onClick={()=>decrement(post._id)}\n                        disabled={post.likes.length==0}>\n                       <FontAwesomeIcon icon={faThumbsDown}  \n                        className=\"icon\" />\n                       </button>\n                        <label style={{float:'right'}}>\n                          {post.likes.length} Likes</label>\n                       </p>\n                       }\n        </div></div>\n               \n          )\n    }\n\n\n    return (\n<div className=\"gridContainer\">\n        <Nav/>\n         <div className=\"homegrid\">\n            \n          <div class=\"card-columns\">\n                {allposts!='' && allposts.map((post)=>\n                {\n                  return(\n                     <PostCard post={post}/>\n                  )\n                })}\n                {allposts==''?<div className=\"links\">\n                <Link to=\"/add\"><button>Add a Post</button></Link>\n                </div>:''}\n            </div>\n            </div>\n            <Footer/>\n            </div>\n    )\n}\n\nexport default PostGrid\n\n\n"]},"metadata":{},"sourceType":"module"}