{"ast":null,"code":"var _jsxFileName = \"/Users/sristichowdhury/Desktop/bwHacks/client/src/components/grid/PostGrid.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport './poststyles.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faThumbsUp } from '@fortawesome/free-solid-svg-icons';\nimport { faThumbsDown } from '@fortawesome/free-solid-svg-icons';\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\nimport { Link, useHistory } from 'react-router-dom';\nimport { UserContext } from '../../App';\nimport Nav from '../nav/Nav';\nimport Footer from '../Footer/Footer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostGrid = () => {\n  _s();\n\n  const [allposts, setAllPosts] = useState('');\n  const [likes, setLikes] = useState('');\n  const [filter, setFilter] = useState('All');\n  const {\n    state,\n    dispatch\n  } = useContext(UserContext);\n  const [tempPosts, setTempPosts] = useState('');\n  const history = useHistory(); //fetch all posts\n\n  useEffect(async () => {\n    await fetch(\"http://localhost:5000/allPosts\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": \"Bearer\" + localStorage.getItem(\"jwt\")\n      },\n      method: \"get\"\n    }).then(res => res.json()).then(res => {// setAllPosts(res.posts);\n      // setTempPosts(res.posts);\n    }).catch(err => alert(err));\n  }, []);\n\n  const increment = async (id) => {\n    await fetch(\"http://localhost:5000/like\", {\n      method: \"put\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": \"Bearer\" + localStorage.getItem(\"jwt\")\n      },\n      body: JSON.stringify({\n        post_id: id\n      })\n    }).then(res => res.json()).then(result => {\n      var posts = result.posts;\n      setTempPosts(posts);\n      if (filter == 'All') setAllPosts(posts);else {\n        posts = posts.filter(post => {\n          return post.sector == filter;\n        });\n        setAllPosts(posts);\n      }\n    }).catch(err => alert(err));\n  };\n\n  const decrement = async (id) => {\n    await fetch(\"http://localhost:5000/unlike\", {\n      method: \"put\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": \"Bearer\" + localStorage.getItem(\"jwt\")\n      },\n      body: JSON.stringify({\n        post_id: id\n      })\n    }).then(res => res.json()).then(result => {\n      var posts = result.posts;\n      setTempPosts(posts);\n      if (filter == 'All') setAllPosts(posts);else {\n        posts = posts.filter(post => {\n          return post.sector == filter;\n        });\n        setAllPosts(posts);\n      }\n    }).catch(err => alert(err));\n  };\n\n  const delPost = async (id) => {\n    console.log(tempPosts);\n    console.log(id);\n    await fetch(`http://localhost:5000/deletePost/${id}`, {\n      method: 'delete',\n      header: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": \"Bearer\" + localStorage.getItem(\"jwt\")\n      }\n    }).then(res => res.json()).then(result => {\n      alert('Post deleted successfully');\n      var posts = result.posts;\n      setTempPosts(posts);\n      setAllPosts(posts);\n      setFilter('All');\n    }).catch(err => alert(err));\n  }; //filter categories\n\n\n  const filterPosts = category => {\n    setFilter(category);\n    if (category == \"All\") setAllPosts(tempPosts);else {\n      //  console.log(category)\n      var postArray = tempPosts;\n      console.log(tempPosts);\n      postArray = postArray.filter(post => {\n        return post.sector == category;\n      }); //  console.log(postArray)\n\n      setAllPosts(postArray);\n    }\n  }; //posts\n\n\n  const PostCard = ({\n    post\n  }) => {\n    const postedBy = post.postedBy; // console.log(postedBy,state._id)\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"card-body\",\n        children: [postedBy == state._id ? /*#__PURE__*/_jsxDEV(\"h6\", {\n          className: \"text-secondary\",\n          style: {\n            float: 'right'\n          },\n          children: \"Posted By You\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this) : /*#__PURE__*/_jsxDEV(\"h6\", {\n          className: \"text-secondary\",\n          style: {\n            float: 'right'\n          },\n          children: \"Anonymous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"card-title\",\n          children: post.body.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            class: \"text-secondary\",\n            children: \"Issues faced\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 24\n          }, this), post.body.issues]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            class: \"text-secondary\",\n            children: \"How to overcome the situation?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 24\n          }, this), post.body.body]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            class: \"text-secondary\",\n            children: \"Advice to others\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 26\n          }, this), post.body.advice]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 24\n        }, this), postedBy == state._id ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"cardText\",\n          style: {\n            width: '100%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"#\", post.body.sector]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 26\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn delete\",\n            onClick: () => delPost(post._id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 26\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 24\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"cardText\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn\",\n            disabled: post.likes.includes(state._id),\n            onClick: () => increment(post._id),\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faThumbsUp,\n              className: \"icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 24\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                marginLeft: '5px'\n              },\n              children: post.likes.length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 24\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 24\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn\",\n            onClick: () => decrement(post._id),\n            disabled: post.likes.length == 0,\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faThumbsDown,\n              className: \"icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 24\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 24\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"#\", post.body.sector]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 11\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"gridContainer\",\n    children: [!allposts && !tempPosts ? /*#__PURE__*/_jsxDEV(\"button\", {\n      class: \"btn btn-primary\",\n      type: \"button\",\n      disabled: true,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        class: \"spinner-border spinner-border-sm\",\n        role: \"status\",\n        \"aria-hidden\": \"true\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 3\n      }, this), \"Loading...\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 1\n    }, this) : /*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"homegrid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter\",\n        children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n          children: \"Filter Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"radiobtn\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"form-check\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              class: \"form-check-input radio\",\n              type: \"radio\",\n              onClick: e => {\n                filterPosts(e.target.value);\n              },\n              value: \"All\",\n              checked: filter == 'All',\n              name: \"flexRadioDefault\",\n              id: \"flexRadioDefault1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              class: \"form-check-label\",\n              for: \"flexRadioDefault1\",\n              children: \"All\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"form-check\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              class: \"form-check-input radio\",\n              type: \"radio\",\n              value: \"Health\",\n              name: \"flexRadioDefault\",\n              id: \"flexRadioDefault1\",\n              onClick: e => {\n                filterPosts(e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              class: \"form-check-label\",\n              for: \"flexRadioDefault1\",\n              children: \"Health\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"form-check\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              class: \"form-check-input radio\",\n              type: \"radio\",\n              value: \"Domestic\",\n              name: \"flexRadioDefault\",\n              id: \"flexRadioDefault2\",\n              onClick: e => {\n                filterPosts(e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              class: \"form-check-label\",\n              for: \"flexRadioDefault2\",\n              children: \"Domestic\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"form-check\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              class: \"form-check-input radio\",\n              type: \"radio\",\n              value: \"Workplace\",\n              name: \"flexRadioDefault\",\n              id: \"flexRadioDefault2\",\n              onClick: e => {\n                filterPosts(e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              class: \"form-check-label\",\n              for: \"flexRadioDefault2\",\n              children: \"Workplace\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"form-check\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              class: \"form-check-input radio\",\n              type: \"radio\",\n              value: \"Finance\",\n              name: \"flexRadioDefault\",\n              id: \"flexRadioDefault2\",\n              onClick: e => {\n                filterPosts(e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              class: \"form-check-label\",\n              for: \"flexRadioDefault2\",\n              children: \"Finance\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"card-columns\",\n        children: [allposts != '' && allposts.map(post => {\n          return /*#__PURE__*/_jsxDEV(PostCard, {\n            post: post\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 22\n          }, this);\n        }), allposts == '' ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"links\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"No new posts here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/add\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"Create Post\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 31\n        }, this) : '']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 233,\n    columnNumber: 1\n  }, this);\n};\n\n_s(PostGrid, \"Ga/PgTkl8s80g6jmZNEqJFhB18E=\", false, function () {\n  return [useHistory];\n});\n\n_c = PostGrid;\nexport default PostGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostGrid\");","map":{"version":3,"sources":["/Users/sristichowdhury/Desktop/bwHacks/client/src/components/grid/PostGrid.js"],"names":["React","useContext","useEffect","useState","FontAwesomeIcon","faThumbsUp","faThumbsDown","faSearch","Link","useHistory","UserContext","Nav","Footer","PostGrid","allposts","setAllPosts","likes","setLikes","filter","setFilter","state","dispatch","tempPosts","setTempPosts","history","fetch","headers","localStorage","getItem","method","then","res","json","catch","err","alert","increment","id","body","JSON","stringify","post_id","result","posts","post","sector","decrement","delPost","console","log","header","filterPosts","category","postArray","PostCard","postedBy","_id","float","title","issues","advice","width","includes","marginLeft","length","e","target","value","map"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react'\nimport './poststyles.css';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faThumbsUp } from '@fortawesome/free-solid-svg-icons'\nimport { faThumbsDown } from '@fortawesome/free-solid-svg-icons'\nimport { faSearch } from '@fortawesome/free-solid-svg-icons'\nimport { Link, useHistory } from 'react-router-dom';\nimport { UserContext } from '../../App';\nimport Nav from '../nav/Nav';\nimport Footer from '../Footer/Footer';\n\nconst PostGrid = () => {\n\n\n    const [allposts,setAllPosts]=useState('');\n    const [likes,setLikes]=useState('');\n    const [filter,setFilter]=useState('All');\n    const { state, dispatch } = useContext(UserContext);\n    const [tempPosts,setTempPosts]=useState('');\n\n\n    const history=useHistory();\n    \n    //fetch all posts\n    useEffect(\n      async()=>\n      {\n      await fetch(\"http://localhost:5000/allPosts\",\n      {\n        headers:\n        {\n          \"Content-Type\":\"application/json\",\n          \"Authorization\":\"Bearer\"+localStorage.getItem(\"jwt\")\n        },\n        method:\"get\"\n        \n      })\n      .then(res=>res.json())\n      .then(res=>\n        {\n          // setAllPosts(res.posts);\n          // setTempPosts(res.posts);\n        })\n      .catch(err=>alert(err))\n    },[]);\n\n\n    const increment = async(id) =>\n    {\n        \n        await fetch(\"http://localhost:5000/like\",\n           {\n             method:\"put\",\n             headers: \n             {\n               \"Content-Type\":\"application/json\",\n               \"Authorization\":\"Bearer\"+localStorage.getItem(\"jwt\")\n      \n             },\n             body:JSON.stringify(\n                  {\n                      post_id:id\n                  }\n                )\n             \n           }).then(res=>res.json())\n           .then(result=>\n            {\n              var posts=result.posts;\n               setTempPosts(posts)\n               if(filter=='All') setAllPosts(posts);\n               else\n               {\n                posts=posts.filter(post=>{return post.sector==filter});\n                setAllPosts(posts)\n               }\n            }).catch(err=>alert(err))\n    }\n\n    const decrement = async(id) =>\n    {\n        \n        await fetch(\"http://localhost:5000/unlike\",\n           {\n             method:\"put\",\n             headers: \n             {\n               \"Content-Type\":\"application/json\",\n               \"Authorization\":\"Bearer\"+localStorage.getItem(\"jwt\")\n      \n             }, \n             body:JSON.stringify(\n                  {\n                      post_id:id\n                  }\n                )\n             \n           }).then(res=>res.json())\n           .then(result=>\n            {\n               var posts=result.posts;\n               setTempPosts(posts)\n               if(filter=='All') setAllPosts(posts);\n               else\n               {\n                posts=posts.filter(post=>{return post.sector==filter});\n                setAllPosts(posts)\n               }\n            }).catch(err=>alert(err))\n        \n    }\n\n    const delPost = async(id) =>\n    {\n       console.log(tempPosts)\n       console.log(id)\n        await fetch(`http://localhost:5000/deletePost/${id}`,\n        {\n          method:'delete',\n          header:\n          {\n            \"Content-Type\":\"application/json\",\n            \"Authorization\":\"Bearer\"+localStorage.getItem(\"jwt\")\n      \n          }\n          \n        }).then(res=>res.json())\n        .then(result=>\n         {\n           alert('Post deleted successfully')\n          var posts=result.posts;\n          setTempPosts(posts)\n          setAllPosts(posts);\n          setFilter('All')\n         }).catch(err=>alert(err))\n     \n    }\n\n\n\n\n    //filter categories\n    const filterPosts = (category) =>\n    {\n        setFilter(category)\n        if(category==\"All\")\n        setAllPosts(tempPosts);\n        else\n        {\n          //  console.log(category)\n           var postArray=tempPosts;\n           console.log(tempPosts)\n           postArray=postArray.filter(post=> {return post.sector==category});\n          //  console.log(postArray)\n           setAllPosts(postArray)\n        }\n    }\n\n    //posts\n\n    const PostCard = ({post})=>\n    {\n      const postedBy=post.postedBy;\n      // console.log(postedBy,state._id)\n      return (\n          <div class=\"card\">\n    \n          <div class=\"card-body\">\n            \n          {postedBy==state._id?\n          <h6 className=\"text-secondary\" \n          style={{float:'right'}}>Posted By You</h6>:\n          <h6\n          className=\"text-secondary\" \n          style={{float:'right'}}>Anonymous</h6>\n          }\n   \n                       <h4 className=\"card-title\">{post.body.title}</h4>\n\n                      <p className=\"card-text\">\n                       <h5 class=\"text-secondary\">Issues faced</h5>\n                         {post.body.issues}</p>\n                       <p className=\"card-text\">\n\n                       <h5 class=\"text-secondary\">How to overcome the situation?</h5>\n                         {post.body.body}\n                         </p>\n                       <p className=\"card-text\">\n                         <h5 class=\"text-secondary\">Advice to others</h5>\n                         {post.body.advice}\n                         </p>\n                      \n                      {/* delete only if added by that user */}\n                      {/* else like/unlike  */}\n                       {postedBy==state._id?\n\n                       <p className=\"cardText\" \n                       style={{width:'100%'}}>\n                         <label>\n                         #{post.body.sector}</label>\n                         <button className=\"btn delete\"\n                       onClick={()=>delPost(post._id)}>Delete</button>\n                        </p>:\n\n                       <p className=\"cardText\">\n                       <button className=\"btn\" \n                       disabled={post.likes.includes(state._id)}\n                       onClick={()=>increment(post._id)}>\n                       <FontAwesomeIcon icon={faThumbsUp} className=\"icon\"/>\n                       <span style={{marginLeft:'5px'}}>{post.likes.length}</span>\n                       </button>\n                       <button className=\"btn\"\n                        onClick={()=>decrement(post._id)}\n                        disabled={post.likes.length==0}>\n                       <FontAwesomeIcon icon={faThumbsDown}  \n                        className=\"icon\" />\n                       </button>\n                        <label>\n                         #{post.body.sector}</label>\n                       </p>\n                       }\n        </div></div>\n               \n          )\n    }\n\n\n    \n\n\n    return (\n<div className=\"gridContainer\">\n  \n{!allposts && !tempPosts ? \n<button class=\"btn btn-primary\"\n type=\"button\" disabled>\n  <span class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\n  Loading...\n</button>:\n        <Nav/>}\n\n         <div className=\"homegrid\">\n           \n\n\n             <div className=\"filter\">\n\n               <h6>Filter Category</h6>\n               <div className=\"radiobtn\">\n               <div class=\"form-check\">\n              <input class=\"form-check-input radio\" type=\"radio\" onClick={(e)=>\n              {\n                filterPosts(e.target.value)\n              }}\n              value=\"All\" checked={filter=='All'}\n              name=\"flexRadioDefault\" id=\"flexRadioDefault1\"/>\n              <label class=\"form-check-label\" for=\"flexRadioDefault1\">\n                All\n              </label>\n            </div>\n             <div class=\"form-check\">\n              <input class=\"form-check-input radio\" type=\"radio\"  value=\"Health\"\n              name=\"flexRadioDefault\" id=\"flexRadioDefault1\" onClick={(e)=>\n              {\n                filterPosts(e.target.value)\n              }}/>\n              <label class=\"form-check-label\" for=\"flexRadioDefault1\">\n                Health\n              </label>\n            </div>\n            <div class=\"form-check\">\n              <input class=\"form-check-input radio\" type=\"radio\" value=\"Domestic\"\n              name=\"flexRadioDefault\" id=\"flexRadioDefault2\" onClick={(e)=>\n                {\n                  filterPosts(e.target.value)\n                }}/>\n              <label class=\"form-check-label\" for=\"flexRadioDefault2\">\n               Domestic\n              </label>\n            </div>\n            <div class=\"form-check\">\n              <input class=\"form-check-input radio\" type=\"radio\" value=\"Workplace\"\n              name=\"flexRadioDefault\" id=\"flexRadioDefault2\" onClick={(e)=>\n                {\n                  filterPosts(e.target.value)\n                }}/>\n              <label class=\"form-check-label\" for=\"flexRadioDefault2\">\n               Workplace\n              </label>\n            </div>\n            <div class=\"form-check\">\n              <input class=\"form-check-input radio\" type=\"radio\" value=\"Finance\"\n              name=\"flexRadioDefault\" id=\"flexRadioDefault2\" onClick={(e)=>\n                {\n                  filterPosts(e.target.value)\n                }}/>\n              <label class=\"form-check-label\" for=\"flexRadioDefault2\">\n               Finance\n              </label>\n            </div>\n             </div>\n             </div>\n\n\n             \n             <div class=\"card-columns\">\n                {allposts!='' && allposts.map((post)=>\n                {\n                  return(\n                     <PostCard post={post}/>\n                  )\n                })}\n                {allposts==''?<div className=\"links\">\n                  <h3>No new posts here</h3>\n                <Link to=\"/add\"><button>Create Post</button></Link>\n                </div>:''}\n            </div>\n            \n          </div>\n            <Footer/>\n            </div>\n    )\n}\n\nexport default PostGrid\n\n\n"]},"metadata":{},"sourceType":"module"}